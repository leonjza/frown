- name: setup the frown challenge
  hosts: all
  become: yes
  roles:
    # a sane way to get docker installed and configured
    - geerlingguy.docker
  tasks:
    # i dont know why, but pam configuration changes the way im doing it
    # here causes dns lookup issues. it just makes making new ssh sessions
    # take longer so as a hack we'll just set the docker daemons dns.
    # yeah, no idea. whatever.
    - name: configure docker daemon dns
      ansible.builtin.copy:
        mode: preserve
        src: daemon.json
        dest: /etc/docker/daemon.json
    - name:
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        name: docker

    # systemd socket activation configuration
    # idea originally from: https://ecksun.com/systemd/2016/08/13/Socket_activated_containers.html
    - name: copy over systemd container ssh socket file
      template:
        src: cssh.socket.j2
        dest: /usr/lib/systemd/system/cssh.socket
    - name: copy over systemd container ssh service file
      template:
        src: cssh@.service.j2
        dest: /usr/lib/systemd/system/cssh@.service
    - name: enable the cssh.socket service
      ansible.builtin.systemd_service:
        enabled: true
        state: started
        name: cssh.socket

    # prepare and build the docker container spawned via socket activation
    - name: copy docker container artefacts to host
      ansible.builtin.copy:
        mode: preserve
        src: docker-challenge/
        dest: /root/docker-challenge
    - name: build main challenge docker container
      community.docker.docker_image:
        name: '{{ chal_container_name }}'
        build:
          path: /root/docker-challenge
          dockerfile: Dockerfile.prod
          args:
            local_auth: '{{ local_auth }}'
            local_auth_password: '{{ local_auth_password }}'
        source: build
        force_source: true
    - name: build flag service docker container
      community.docker.docker_image:
        name: '{{ flag_service_container_name }}'
        build:
          path: /root/docker-challenge
          dockerfile: Dockerfile.flag
        source: build
        force_source: true
    - name: ensure container network exists
      community.docker.docker_network:
        name: '{{ docker_network_name }}'
    - name: ensure flag container is up and running
      community.docker.docker_container:
        name: frown-service
        image: '{{ flag_service_container_name }}'
        restart_policy: "always"
        recreate: true
        networks:
          - name: '{{ docker_network_name }}'
    - name: prune any dangling containers
      community.docker.docker_prune:
        containers: true
        images: true
        images_filters:
          dangling: true
    - name: cleanup docker container artefacts after container build
      ansible.builtin.file:
        state: absent
        path: /root/docker-challenge